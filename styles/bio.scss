@use './partials/global' as *;
@use './partials/colors';
@use './partials/breakpoints' as *;
@use './partials/units';
@use './partials/mixins';

@use './partials/forms';

.hero{
    &--bio{
        height: min(58.5vw, 39.375rem /*630px*/);
    }
}

//# About Section
.about{
    @include mixins.flex-column-center;

    ///TODO, simplify this layout using a similar design to the intro
    &__content-wrapper{
        @include mixins.common-content-container;
        @include mixins.flex-column-center;
    }

    &__content{
        @include tablet{
            max-width: 83%;
        }
    }
}

///# About Header , top help of the about section before the bio
.about-header{
    @include mixins.common-flex-container(column);
    &__image{
        //Very cool, though there may be performance considerations
        @keyframes scrollImage {
            25%{
                object-position: top;
            }
            100%{
                object-position: bottom;
            }
        }

        width: 100%;
        aspect-ratio: 1.845;
        object-fit: cover;
        object-position: bottom;
        animation: scrollImage 10s ease-in-out 5s infinite;
    }

    &__quote-container{
        display: flex;
        flex-direction: column;
        gap: units.$padding-3;
        max-width: 42rem;
    }

    &__quote-text{
        @extend .subheader;
        display: block;
        padding: 0;

        @include tablet{
            font-size: 1.4rem;
            line-height: 1.9rem;
        }
    }

    &__quote-cite{
        font-weight: 600;
        word-spacing: .2em;
        @include tablet{
            font-size: 1.1em;
        }
    }
}


//# About Bio
.bio{
    &__title{
        color: colors.$secondark-dark;
    }
    &__content{
        @include mixins.common-flex-container-items(column);
        @include tablet{
            flex-direction: row;
        }
    }
}


///# Gallery Section
.photo-gallery{
    @include mixins.flex-column-center;
    background-color: colors.$secondary-light; 

    &__content{
        @include mixins.common-content-container;
    }

    &__list{
        list-style-type: none;
        @include mixins.common-flex-container-items;
        flex-wrap: wrap;
    }

    &__item{
        flex: 1 1 100%;
        @include tablet{
            //This is the way to go, the ideal flex strategy. Ideally we should try to do something like this for the footer as well.
            flex: 1 1 30%;
        }
    }

    &__image{
        max-width: 100%;
        display: block;

        //Effects
        filter:grayscale(1);
        transition: filter 1s ease-out;
        
        &:hover{
            filter: grayscale(0);
        }
    }
}


///There's an opportunity for this type of placeholder class to be implemented universally once we work out the exact rules
%section{
    padding: 0 units.$margins_Mobile units.$margins_Mobile units.$margins_Mobile;

    @include tablet{
        padding: 0 units.$margins_Tablet units.$margins_Tablet units.$margins_Tablet;
    }

    & > *{
        max-width: units.$maxWidth; 
        margin: auto;
    }
}




// FORM FIELD HEIGHT
// The form field height will be no less than 48px on
// desktop & tablet, and no less than 36px on mobile.
// FORM FIELD WIDTH
// The form field should span the entire width of the
// container for all screen sizes.
// FORM FIELD RADIUS
// For radius treatment, default to 4px on all corners.
// FORM FIELD PADDING
// For desktop & tablet screen sizes, default to 16px of
// padding on all sides. For mobile, default to 12px of
// padding on all sides.
// FORM FIELD LABELS
// The space between the form field label and the form
// field itself will be 4px on all screen sizes.
// FORM FIELD BORDER
// The form fields will have a 1px border using the color
// Mercury for the default state, BandSite-Black for the
// active state, and #D22D2D for the error state.




//# Comments Section
.comments-section{
    $vertical-gap-mobile: 1rem;
    $vertical-gap-tablet: 1.5rem;

    @extend %section;

    //## Section Content Container
    &__container{
        margin: auto;

        display: flex;
        flex-direction: column;
        gap: $vertical-gap-mobile;

        @include tablet{
            max-width: 576px;
            gap: $vertical-gap-tablet;
        }
    }

    //## Comment Form
    .comment-form{
        $horizontal-gap: 1rem;

        display: flex;
        align-items: flex-start;
        gap: $horizontal-gap;

        //### Comment Form Content (right)
        &__content{
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            gap: $vertical-gap-tablet;
        }
    

        &__form-submit{
            align-self: flex-end;
        }
    }

    //## Comment
    .comment{
        $horizontal-gap: 1rem;
        $vertical-gap: 1rem; ///Possibly needs line height tweaking
        
        display: flex;
        align-items: flex-start;
        gap: $horizontal-gap;
        
        ///### Comment Content (right) 
        &__content{
            flex-grow: 1;
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: $vertical-gap;
        }
        
        &__name{
            height: 1em; ///My latest genius fix for the line height problem
        }

        ///### Comment timestamp
        &__timestamp{
            color: colors.$primary-gray;
            height: 1em; ///My latest genius fix for the line height problem
        }

        //### Comment text
        &__text{
            flex: 100%;
        }
    }
}